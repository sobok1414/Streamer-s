{"ast":null,"code":"import _classCallCheck from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\streams\\\\client\\\\src\\\\components\\\\stream\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      streams: []\n    };\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n      console.log(this.state.streams);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"asd\");\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: state\n  };\n};\n\nexport default connect(null, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["D:\\streams\\client\\src\\components\\stream\\StreamList.js"],"names":["React","connect","fetchStreams","StreamList","state","streams","props","console","log","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;;;;;wCAEY;AAChB,WAAKC,KAAL,CAAWJ,YAAX;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,OAAvB;AACH;;;6BAEQ;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH;;;;EAXoBL,KAAK,CAACS,S;;AAc/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAN,KAAK,EAAI;AAC7B,SAAO;AAAEC,IAAAA,OAAO,EAAED;AAAX,GAAP;AACH,CAFD;;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,YAAY,EAAZA;AAAF,CAAP,CAAP,CAAgCC,UAAhC,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n\r\n    state = { streams: [] }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStreams()\r\n        console.log(this.state.streams)\r\n    }\r\n\r\n    render() {\r\n        return <div>asd</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { streams: state }\r\n}\r\n\r\nexport default connect(null, { fetchStreams })(StreamList)"]},"metadata":{},"sourceType":"module"}