{"ast":null,"code":"import _classCallCheck from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\streams\\\\client\\\\src\\\\components\\\\stream\\\\StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { createStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.createStream(formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(StreamForm, {\n        onSubmit: onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You mist emter a description\";\n  }\n\n  return errors;\n};\n\nvar formWrapped = reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);\nexport default connect(null, {\n  createStream: createStream\n})(formWrapped);","map":{"version":3,"sources":["D:\\streams\\client\\src\\components\\stream\\StreamCreate.js"],"names":["React","Field","reduxForm","connect","createStream","StreamForm","StreamCreate","onSubmit","formValues","props","Component","validate","errors","title","description","formWrapped","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAEFC,Q,GAAW,UAACC,UAAD,EAAgB;AACvB,YAAKC,KAAL,CAAWL,YAAX,CAAwBI,UAAxB;AACH,K;;;;;;;6BAEO;AACJ,aACI,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAED,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EAVsBP,KAAK,CAACU,S;;AAajC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACH,UAAD,EAAgB;AAE7B,MAAMI,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACJ,UAAU,CAACK,KAAhB,EAAuB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AACD,MAAI,CAACL,UAAU,CAACM,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAZD;;AAcA,IAAMG,WAAW,GAAGb,SAAS,CAAC;AAC1Bc,EAAAA,IAAI,EAAE,cADoB;AAE1BL,EAAAA,QAAQ,EAAEA;AAFgB,CAAD,CAAT,CAGjBL,YAHiB,CAApB;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAO;AAAEC,EAAAA,YAAY,EAAZA;AAAF,CAAP,CAAP,CAAgCW,WAAhC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { createStream } from '../../actions';\r\nimport StreamForm from './StreamForm';\r\n\r\nclass StreamCreate extends React.Component {\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.createStream(formValues);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <StreamForm onSubmit={onSubmit}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n\r\n    const errors = {};\r\n\r\n    if (!formValues.title) {\r\n        errors.title = 'You must enter a title'\r\n    }\r\n    if (!formValues.description) {\r\n        errors.description = \"You mist emter a description\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nconst formWrapped = reduxForm({\r\n    form: 'streamCreate',\r\n    validate: validate\r\n})(StreamCreate);\r\n\r\nexport default connect(null, { createStream })(formWrapped);"]},"metadata":{},"sourceType":"module"}