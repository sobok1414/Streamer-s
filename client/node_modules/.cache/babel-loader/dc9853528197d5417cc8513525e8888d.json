{"ast":null,"code":"import _classCallCheck from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\streams\\\\client\\\\src\\\\components\\\\stream\\\\StreamCreate.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\n\nvar StreamCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamCreate, _React$Component);\n\n  function StreamCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderInput = function (_ref) {\n      var input = _ref.input,\n          label = _ref.label,\n          meta = _ref.meta;\n      var className = \"field \".concat(meta.error && meta.touched, \" ? 'error': ''\");\n      return React.createElement(\"div\", {\n        className: className,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({}, input, {\n        autoComplete: \"off\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      })), _this.renderError(meta));\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamCreate, [{\n    key: \"renderError\",\n    value: function renderError(_ref2) {\n      var error = _ref2.error,\n          touched = _ref2.touched;\n\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          className: \"ui error message\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 9\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 10\n          },\n          __self: this\n        }, error));\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(formValues) {\n      console.log(formValues);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"title\",\n        component: this.renderInput,\n        label: \"Eeter Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"description\",\n        component: this.renderInput,\n        label: \"Enter Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"ui button primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Submit\"));\n    }\n  }]);\n\n  return StreamCreate;\n}(React.Component);\n\nvar validate = function validate(formValues) {\n  var errors = {};\n\n  if (!formValues.title) {\n    errors.title = 'You must enter a title';\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You mist emter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: 'streamCreate',\n  validate: validate\n})(StreamCreate);","map":{"version":3,"sources":["D:\\streams\\client\\src\\components\\stream\\StreamCreate.js"],"names":["React","Field","reduxForm","StreamCreate","renderInput","input","label","meta","className","error","touched","renderError","formValues","console","log","props","handleSubmit","onSubmit","Component","validate","errors","title","description","form"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;;IAEMC,Y;;;;;;;;;;;;;;;;;;UAYFC,W,GAAc,gBAA4B;AAAA,UAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,UAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,UAAXC,IAAW,QAAXA,IAAW;AACtC,UAAMC,SAAS,mBAAYD,IAAI,CAACE,KAAL,IAAcF,IAAI,CAACG,OAA/B,mBAAf;AACA,aACI;AAAK,QAAA,SAAS,EAAEF,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQF,KAAR,CADA,EAEI,+CAAWD,KAAX;AAAkB,QAAA,YAAY,EAAC,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGK,MAAKM,WAAL,CAAiBJ,IAAjB,CAHL,CADJ;AAOH,K;;;;;;;uCAnB+B;AAAA,UAAlBE,KAAkB,SAAlBA,KAAkB;AAAA,UAAXC,OAAW,SAAXA,OAAW;;AAC5B,UAAGA,OAAO,IAAID,KAAd,EAAqB;AACjB,eACI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,KAAzB,CADJ,CADJ;AAKH;AACJ;;;6BAaQG,U,EAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACH;;;6BAEO;AACJ,aACI;AAAM,QAAA,QAAQ,EAAE,KAAKG,KAAL,CAAWC,YAAX,CAAwB,KAAKC,QAA7B,CAAhB;AAAwD,QAAA,SAAS,EAAC,eAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAE,KAAKb,WAApC;AAAiD,QAAA,KAAK,EAAC,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,SAAS,EAAE,KAAKA,WAA1C;AAAuD,QAAA,KAAK,EAAC,mBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,CADJ;AAOH;;;;EAnCsBJ,KAAK,CAACkB,S;;AAsCjC,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACP,UAAD,EAAgB;AAE7B,MAAMQ,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACR,UAAU,CAACS,KAAhB,EAAuB;AACnBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACH;;AACD,MAAI,CAACT,UAAU,CAACU,WAAhB,EAA6B;AACzBF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACH;;AAED,SAAOF,MAAP;AACH,CAZD;;AAcA,eAAelB,SAAS,CAAC;AACrBqB,EAAAA,IAAI,EAAE,cADe;AAErBJ,EAAAA,QAAQ,EAAEA;AAFW,CAAD,CAAT,CAGZhB,YAHY,CAAf","sourcesContent":["import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass StreamCreate extends React.Component {\r\n\r\n    renderError({ error, touched }) {\r\n        if(touched && error) {\r\n            return (\r\n                <div className=\"ui error message\">\r\n                    <div className=\"header\">{error}</div>\r\n                </div>\r\n            )\r\n        }\r\n    } \r\n\r\n    renderInput = ({ input, label, meta }) => {\r\n        const className = `field ${meta.error && meta.touched} ? 'error': ''`\r\n        return (\r\n            <div className={className}>\r\n            <label>{label}</label>\r\n                <input {...input} autoComplete=\"off\" />\r\n                {this.renderError(meta)}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSubmit(formValues) {\r\n        console.log(formValues)\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\r\n                <Field name=\"title\" component={this.renderInput} label=\"Eeter Title\" />\r\n                <Field name=\"description\" component={this.renderInput} label=\"Enter Description\" />\r\n                <button className=\"ui button primary\">Submit</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n\r\n    const errors = {};\r\n\r\n    if (!formValues.title) {\r\n        errors.title = 'You must enter a title'\r\n    }\r\n    if (!formValues.description) {\r\n        errors.description = \"You mist emter a description\"\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'streamCreate',\r\n    validate: validate\r\n})(StreamCreate);"]},"metadata":{},"sourceType":"module"}