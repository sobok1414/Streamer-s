{"ast":null,"code":"import _classCallCheck from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\streams\\\\client\\\\src\\\\components\\\\stream\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      streams: {}\n    };\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"right floated content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"ui button primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, \"EDIT\"), React.createElement(\"button\", {\n          className: \"ui button negative\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"DELETE\"));\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this2 = this;\n\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, stream.title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, stream.description)), _this2.renderAdmin(stream));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["D:\\streams\\client\\src\\components\\stream\\StreamList.js"],"names":["React","connect","fetchStreams","StreamList","state","streams","props","stream","userId","currentUserId","map","id","title","description","renderAdmin","renderList","Component","mapStateToProps","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;;IAEMC,U;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;;;;;wCAEY;AAChB,WAAKC,KAAL,CAAWJ,YAAX;AACH;;;gCAEWK,M,EAAQ;AAChB,UAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKF,KAAL,CAAWG,aAAhC,EAA+C;AAC3C,eACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ;AAUH;AACJ;;;iCAEY;AAAA;;AACT,aAAO,KAAKH,KAAL,CAAWD,OAAX,CAAmBK,GAAnB,CAAuB,UAAAH,MAAM,EAAI;AACpC,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACI,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKJ,MAAM,CAACK,KADZ,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKL,MAAM,CAACM,WADZ,CAFJ,CAFJ,EAQK,MAAI,CAACC,WAAL,CAAiBP,MAAjB,CARL,CADJ;AAYH,OAbM,CAAP;AAcH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKQ,UAAL,EAAjC,CAFJ,CADJ;AAMH;;;;EA/CoBf,KAAK,CAACgB,S;;AAkD/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAb,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAEa,MAAM,CAACC,MAAP,CAAcf,KAAK,CAACC,OAApB,CADN;AAEHI,IAAAA,aAAa,EAAEL,KAAK,CAACgB,IAAN,CAAWZ;AAFvB,GAAP;AAIH,CALD;;AAOA,eAAeP,OAAO,CAACgB,eAAD,EAAkB;AAAEf,EAAAA,YAAY,EAAZA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams } from '../../actions';\r\n\r\nclass StreamList extends React.Component {\r\n\r\n    state = { streams: {} }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStreams()\r\n    }\r\n    \r\n    renderAdmin(stream) {\r\n        if(stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"right floated content\">\r\n                    <button className=\"ui button primary\">\r\n                        EDIT\r\n                    </button>\r\n                    <button className=\"ui button negative\">\r\n                        DELETE\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    renderList() {\r\n        return this.props.streams.map(stream => {\r\n            return (\r\n                <div className=\"item\" key={stream.id}>\r\n                    <i className=\"large middle aligned icon camera\" />\r\n                    <div className=\"content\">\r\n                        {stream.title}\r\n                        <div className=\"description\">\r\n                            {stream.description}\r\n                        </div>\r\n                    </div>\r\n                    {this.renderAdmin(stream)}\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>Streams</h2>\r\n                <div className=\"ui celled list\">{this.renderList()}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        streams: Object.values(state.streams), \r\n        currentUserId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList)"]},"metadata":{},"sourceType":"module"}