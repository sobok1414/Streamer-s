{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM } from './types';\nimport streams from '../apis/streams';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStream = function createStream(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post('/streams', formValues);\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  tpye: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["D:\\streams\\client\\src\\actions\\index.js"],"names":["SIGN_IN","SIGN_OUT","CREATE_STREAM","streams","signIn","userId","type","payload","signOut","createStream","formValues","dispatch","post","response","tpye","data"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,QAAiD,SAAjD;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAEN,OADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAEL;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,IAAMQ,YAAY,GAAG,SAAfA,YAAe,CAAAC,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAI,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACfR,OAAO,CAACS,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADe;;AAAA;AAChCG,gBAAAA,QADgC;AAGtCF,gBAAAA,QAAQ,CAAC;AAAEG,kBAAAA,IAAI,EAAGZ,aAAT;AAAwBK,kBAAAA,OAAO,EAAEM,QAAQ,CAACE;AAA1C,iBAAD,CAAR;;AAHsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA/B","sourcesContent":["import { SIGN_IN, SIGN_OUT, CREATE_STREAM } from './types';\r\nimport streams from '../apis/streams';\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}\r\n\r\nexport const createStream = formValues => async dispatch => {\r\n    const response = await streams.post('/streams', formValues);\r\n\r\n    dispatch({ tpye:  CREATE_STREAM, payload: response.data })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}