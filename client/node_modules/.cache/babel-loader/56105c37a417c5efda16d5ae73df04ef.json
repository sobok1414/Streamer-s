{"ast":null,"code":"import _classCallCheck from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\streams\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\streams\\\\client\\\\src\\\\components\\\\stream\\\\StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams, firstFetchStreams } from '../../actions';\nimport { Link } from 'react-router-dom';\nimport './StreamList.css';\nimport faker from 'faker';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      streams: {},\n      inital: true,\n      hasMore: true\n    };\n\n    _this.fetchStreams = function () {\n      _this.props.fetchStreams();\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"createButton\",\n    value: function createButton() {\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          style: {\n            textAlign: 'right'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/new\",\n          className: \"ui positive button \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"CREATE STREAM\"));\n      }\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          className: \"ui two buttons\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/edit/\".concat(stream.id),\n          className: \"ui basic blue button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, \"EDIT\"), React.createElement(Link, {\n          to: \"/streams/delete/\".concat(stream.id),\n          className: \"ui basic red button\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"DELETE\"));\n      }\n    }\n  }, {\n    key: \"goToTheTop\",\n    value: function goToTheTop() {\n      return React.createElement(\"button\", {\n        onClick: function onClick() {\n          return window.scrollTo(0, 0);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"\\uC704\\uB85C\");\n    }\n  }, {\n    key: \"renderStream\",\n    value: function renderStream() {\n      var _this2 = this;\n\n      var streams = this.props.streams;\n      return streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"card\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/\".concat(stream.id),\n          className: \"image\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          alt: \"Not Found\",\n          src: faker.image.image(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/streams/\".concat(stream.id),\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, stream.title), React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, stream.description)), React.createElement(\"div\", {\n          className: \"extra content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, _this2.renderAdmin(stream)));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"parents\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"parents ui header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"ui left floated header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui right floated header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.createButton())), React.createElement(\"div\", {\n        className: \"ui clearing divider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"ui container\",\n        style: {\n          width: '1210px',\n          overflow: 'hidden'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui link cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.renderStream())));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["D:\\streams\\client\\src\\components\\stream\\StreamList.js"],"names":["React","connect","fetchStreams","firstFetchStreams","Link","faker","InfiniteScroll","StreamList","state","streams","inital","hasMore","props","isSignedIn","textAlign","stream","userId","currentUserId","id","window","scrollTo","map","image","title","description","renderAdmin","createButton","width","overflow","renderStream","Component","mapStateToProps","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,iBAAvB,QAAgD,eAAhD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;IAEMC,U;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE,EAAX;AAAeC,MAAAA,MAAM,EAAE,IAAvB;AAA6BC,MAAAA,OAAO,EAAE;AAAtC,K;;UAgERT,Y,GAAe,YAAM;AACjB,YAAKU,KAAL,CAAWV,YAAX;AACH,K;;;;;;;yCAhEoB;AACjB,WAAKU,KAAL,CAAWV,YAAX;AACH;;;mCAEc;AACX,UAAG,KAAKU,KAAL,CAAWC,UAAd,EAAyB;AACrB,eACI;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,qBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,CADJ;AAKH;AACJ;;;gCAEWC,M,EAAQ;AAChB,UAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKJ,KAAL,CAAWK,aAAhC,EAA+C;AAC3C,eACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,0BAAmBF,MAAM,CAACG,EAA1B,CAAR;AAAwC,UAAA,SAAS,EAAC,sBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII,oBAAC,IAAD;AAAM,UAAA,EAAE,4BAAqBH,MAAM,CAACG,EAA5B,CAAR;AAA0C,UAAA,SAAS,EAAC,qBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ;AAUH;AACJ;;;iCAEY;AACT,aACI;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMC,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AAKH;;;mCAEc;AAAA;;AAAA,UACHX,OADG,GACS,KAAKG,KADd,CACHH,OADG;AAGX,aAAOA,OAAO,CAACY,GAAR,CAAY,UAAAN,MAAM,EAAI;AACzB,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACG,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACQ,oBAAC,IAAD;AAAM,UAAA,EAAE,qBAAcH,MAAM,CAACG,EAArB,CAAR;AAAmC,UAAA,SAAS,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,GAAG,EAAC,WAAT;AAAqB,UAAA,GAAG,EAAEb,KAAK,CAACiB,KAAN,CAAYA,KAAZ,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADR,EAIQ;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,qBAAcP,MAAM,CAACG,EAArB,CAAR;AAAmC,UAAA,SAAS,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKH,MAAM,CAACQ,KADZ,CADJ,EAII;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKR,MAAM,CAACS,WADZ,CAJJ,CAJR,EAYQ;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACK,MAAI,CAACC,WAAL,CAAiBV,MAAjB,CADL,CAZR,CADJ;AAkBH,OAnBM,CAAP;AAoBH;;;6BAMQ;AACL,aACI;AAAK,QAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKW,YAAL,EAA1C,CAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAMI;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,QAAT;AAAmBC,UAAAA,QAAQ,EAAE;AAA7B,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,YAAL,EADL,CADJ,CANJ,CADJ;AAcH;;;;EArFoB7B,KAAK,CAAC8B,S;;AAwF/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAvB,KAAK,EAAI;AAC7B,SAAO;AACHC,IAAAA,OAAO,EAAEuB,MAAM,CAACC,MAAP,CAAczB,KAAK,CAACC,OAApB,CADN;AAEHQ,IAAAA,aAAa,EAAET,KAAK,CAAC0B,IAAN,CAAWlB,MAFvB;AAGHH,IAAAA,UAAU,EAAEL,KAAK,CAAC0B,IAAN,CAAWrB;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAeZ,OAAO,CAAC8B,eAAD,EAAkB;AAAE7B,EAAAA,YAAY,EAAZA;AAAF,CAAlB,CAAP,CAA2CK,UAA3C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchStreams, firstFetchStreams } from '../../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport './StreamList.css'\r\nimport faker from 'faker';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nclass StreamList extends React.Component {\r\n\r\n    state = { streams: {}, inital: true, hasMore: true }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchStreams()\r\n    }\r\n    \r\n    createButton() {\r\n        if(this.props.isSignedIn){\r\n            return (\r\n                <div style={{ textAlign: 'right' }}>\r\n                    <Link to=\"/streams/new\" className=\"ui positive button \">CREATE STREAM</Link>\r\n                </div>\r\n            )   \r\n        }\r\n    }\r\n\r\n    renderAdmin(stream) {\r\n        if(stream.userId === this.props.currentUserId) {\r\n            return (\r\n                <div className=\"ui two buttons\">\r\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui basic blue button\">\r\n                        EDIT\r\n                    </Link>\r\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui basic red button\">\r\n                        DELETE\r\n                    </Link>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    goToTheTop() {\r\n        return (\r\n            <button onClick={() => window.scrollTo(0, 0)}>\r\n                위로\r\n            </button>\r\n        )\r\n    }\r\n\r\n    renderStream() {\r\n        const { streams } = this.props\r\n\r\n        return streams.map(stream => {\r\n            return (\r\n                <div className=\"card\" key={stream.id}>\r\n                        <Link to={`/streams/${stream.id}`} className=\"image\" >\r\n                            <img alt=\"Not Found\" src={faker.image.image()}/>\r\n                        </Link> \r\n                        <div className=\"content\">\r\n                            <Link to={`/streams/${stream.id}`} className=\"header\">\r\n                                {stream.title}\r\n                            </Link>\r\n                            <div className=\"description\">\r\n                                {stream.description}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"extra content\">\r\n                            {this.renderAdmin(stream)}\r\n                        </div>\r\n                    </div>\r\n                )\r\n        })\r\n    }\r\n\r\n    fetchStreams = () => {\r\n        this.props.fetchStreams()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"parents\">\r\n                <div className=\"parents ui header\">\r\n                    <h2 className=\"ui left floated header\">Streams</h2>\r\n                    <div className=\"ui right floated header\">{this.createButton()}</div>\r\n                </div>\r\n                <div className=\"ui clearing divider\"></div>\r\n                <div className=\"ui container\" style={{ width: '1210px', overflow: 'hidden'}}>\r\n                    <div className=\"ui link cards\">\r\n                        {this.renderStream()}\r\n                    </div> \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        streams: Object.values(state.streams), \r\n        currentUserId: state.auth.userId,\r\n        isSignedIn: state.auth.isSignedIn\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { fetchStreams })(StreamList)"]},"metadata":{},"sourceType":"module"}